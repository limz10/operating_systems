Mingzhe Li

Operating Systems HW1

Fall 2016


1.
--2.1
	It is somewhat obvious if you draw the illustrations of the workflow.
	1 job:
		The CPU utilization will be 50% for both cases.
		The turnaround time will be N*T for both cases.

	2 jobs:
		a) The CPU utilization is N/(N+0.5).  Turnaround times are N*T and
			(N+0.5)*T.  Throughput (N+0.25)*T.
		b) The CPU utilization is N/(N+0.25).  Turnaround times are N*T and
			(N+0.25)*T.  Throughput (N+0.125)*T.

	4 jobs:
		a) The CPU utilization is 2n/(2N+0.5).  Turnaround times are (2N-1)*T,
			(2N-0.5)*T, 2N*T, (2N+0.5)*T.  Throughput (2N-0.25)*T.
		b) The CPU utilization is 2N/(2N+0.25).  Turnaround times are 
			(2N-0.5)*T, (2N-0.25)*T, 2N*T, (2N+0.25)*T.  
			Throughput (2N+0.875)*T.

--2.2
	Because it use little processor time, it thus favors I/O-bound processes.
	It won't deny access to the processor-bound programs permanently, because
	I/O-bound programs spend more time waiting, and there is opportunity 
	for processor-bound programs to do the work.

	



2. 
	These instructions are called by the OS when it gives control 
	to a user
 program.  Therefore, they are usually privileged instructions.
	
	Applications trying to run these instructions are illegal, 
	
	and thus will raise a hardware exception.





3.
	
	The hardware will switch from user mode to supervisor mode, 
	and the OS will take control.  The OS has a function to handle interrupts. 

	It saves all the states and registers for the later correct execution of
	the process.  It executes the program to handle the interrupt, and then
	call the "return from interrupt" instruction.  The OS goes on to run 
	application programs, or enters the idle loop.